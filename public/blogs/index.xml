<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Dhruv Bindra | Software Developer</title>
    <link>https://bindrad.github.io/blogs/</link>
    <description>Recent content in Blogs on Dhruv Bindra | Software Developer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 11 Jul 2024 00:00:00 -0700</lastBuildDate>
    <atom:link href="https://bindrad.github.io/blogs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GraphRAG: Revolutionizing Data Insights with Privacy-Preserving AI</title>
      <link>https://bindrad.github.io/blogs/graphrag/</link>
      <pubDate>Thu, 11 Jul 2024 00:00:00 -0700</pubDate>
      <guid>https://bindrad.github.io/blogs/graphrag/</guid>
      <description>In our data-rich world, extracting meaningful insights from narrative data—like patient records, legal documents, and customer interactions—while preserving privacy is challenging. Microsoft Research&amp;rsquo;s GraphRAG offers a promising solution by integrating graph databases with large language models (LLMs). This approach not only enhances data discovery but also ensures privacy protection.&#xA;The Challenge Narrative data is complex and unstructured, making it tough to analyze. Additionally, this data often contains sensitive information, requiring robust privacy measures.</description>
    </item>
    <item>
      <title>Implementing Authentication and Authorization in Go</title>
      <link>https://bindrad.github.io/blogs/authentication-authorization/</link>
      <pubDate>Mon, 01 Jul 2024 00:00:00 -0700</pubDate>
      <guid>https://bindrad.github.io/blogs/authentication-authorization/</guid>
      <description>When building secure web applications, authentication and authorization are critical components that ensure users have appropriate access to resources. In this blog, we&amp;rsquo;ll explore how to implement both using Go, focusing on practical examples and best practices.&#xA;Authentication vs. Authorization Before diving into the implementation, it&amp;rsquo;s essential to distinguish between authentication and authorization:&#xA;Authentication: Verifies the identity of a user (e.g., logging in with a username and password). Authorization: Determines whether an authenticated user has permission to access specific resources.</description>
    </item>
    <item>
      <title>Exploring the Power of Ollama with LangChainGo: Building AI Applications in Go</title>
      <link>https://bindrad.github.io/blogs/ollama-langchain/</link>
      <pubDate>Fri, 19 Apr 2024 00:00:00 -0700</pubDate>
      <guid>https://bindrad.github.io/blogs/ollama-langchain/</guid>
      <description>Integrating Ollama with LangChainGo opens up exciting possibilities for developers looking to harness the power of AI in their Go projects. Ollama, a language model developed by Gemma, offers advanced natural language processing capabilities, while LangChainGo provides seamless integration with Go, allowing developers to build production-ready AI applications with ease.&#xA;Here&amp;rsquo;s a closer look at how you can leverage Ollama with LangChainGo to create sophisticated AI applications:&#xA;package main import ( &amp;#34;context&amp;#34; &amp;#34;flag&amp;#34; &amp;#34;fmt&amp;#34; &amp;#34;log&amp;#34; &amp;#34;github.</description>
    </item>
    <item>
      <title>From Ephemeral to Everlasting: Understanding Container Volumes</title>
      <link>https://bindrad.github.io/blogs/container-volumes/</link>
      <pubDate>Tue, 30 Jan 2024 00:00:00 -0700</pubDate>
      <guid>https://bindrad.github.io/blogs/container-volumes/</guid>
      <description>Containers are small, lightweight bundles containing one or more applications and their dependencies, essential for running code. The beauty of containers lies in their ability to package all necessary components, making applications highly portable.&#xA;Why does a Container Need Persistent Storage? Containers are ephemeral, necessitating a means to store persistent data. While containers carry code, runtime, and dependencies wherever they go, they don&amp;rsquo;t bring along application-generated data to maintain a lightweight footprint.</description>
    </item>
    <item>
      <title>Exploring Containerization: Unveiling the Core Concepts and Technologies</title>
      <link>https://bindrad.github.io/blogs/containers/</link>
      <pubDate>Mon, 22 Jan 2024 00:00:00 -0700</pubDate>
      <guid>https://bindrad.github.io/blogs/containers/</guid>
      <description>Containers have emerged as a revolutionary way to deploy applications, offering a unique approach to running software in an isolated environment. This isolation ensures that your application operates independently, safeguarding both the applications running on the host machine and the host machine itself. A container provides a contained space to your application where it is shielded from the external interference of the host machine or other applications running on host machines.</description>
    </item>
  </channel>
</rss>
